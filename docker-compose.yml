networks:
  network:
    name: network
    external: false

volumes:
  postgres-data:
  redis-data:
  nats-data:


services:
  app:
    container_name: botmediasaver
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
      # - nats
    networks:
      - network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
    - ./config/config.dev.yml:/app/config/config.dev.yml

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_USER: khoakomlem
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-peakkhoakomlempassword}
      POSTGRES_DB: botmediasaver
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U khoakomlem -d khoakomlem" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:8-alpine
    # ports:
    #   - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-peakkhoakomlempassword}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # nats:
  #   container_name: nats
  #   image: nats:2.11-alpine
  #   ports:
  #     - "4222:4222" # Client connections
  #     - "8222:8222" # HTTP monitoring
  #   networks:
  #     - network
  #   volumes:
  #     - nats-data:/data
  #   healthcheck:
  #     test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   restart: unless-stopped
